from numpy import eye, zeros, arange, linspace, diag


# единичные матрицы:

# >>> eye(2)
# array([[1., 0.],
#        [0., 1.]])
# >>>
# >>> eye(2, dtype=int)
# array([[1, 0],
#        [0, 1]])
# >>>
# >>> eye(3, dtype=int)
# array([[1, 0, 0],
#        [0, 1, 0],
#        [0, 0, 1]])
# >>>
# >>> eye(11, dtype=int)
# array([[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
#        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
#        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
#        [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
#        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
#        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
#        [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
#        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
#        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
#        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])


# массивы, заполненные нолями:

# >>> zeros(5, dtype=int)
# array([0, 0, 0, 0, 0])
# >>>
# >>> zeros((3, 6), dtype=int)
# array([[0, 0, 0, 0, 0, 0],
#        [0, 0, 0, 0, 0, 0],
#        [0, 0, 0, 0, 0, 0]])
# >>>
# >>> zeros((2, 3, 4), dtype=int)
# array([[[0, 0, 0, 0],
#         [0, 0, 0, 0],
#         [0, 0, 0, 0]],
# 
#        [[0, 0, 0, 0],
#         [0, 0, 0, 0],
#         [0, 0, 0, 0]]])


# быстрый способ создания одноосного массива на основе диапазона чисел
# >>> arange(10, 100, 10)
# array([10, 20, 30, 40, 50, 60, 70, 80, 90])


# создание одноосного массива на основе разбивки диапазона чисел на заданное количество интервалов
# >>> linspace(0, 100, 11)
# array([  0.,  10.,  20.,  30.,  40.,  50.,  60.,  70.,  80.,  90., 100.])
# >>>
# >>> linspace(0, 100, 51)
# array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,
#         22.,  24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,
#         44.,  46.,  48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,
#         66.,  68.,  70.,  72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,
#         88.,  90.,  92.,  94.,  96.,  98., 100.])
# >>>
# >>> linspace(0, 100, 101)
# array([  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,
#         11.,  12.,  13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,
#         22.,  23.,  24.,  25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,
#         33.,  34.,  35.,  36.,  37.,  38.,  39.,  40.,  41.,  42.,  43.,
#         44.,  45.,  46.,  47.,  48.,  49.,  50.,  51.,  52.,  53.,  54.,
#         55.,  56.,  57.,  58.,  59.,  60.,  61.,  62.,  63.,  64.,  65.,
#         66.,  67.,  68.,  69.,  70.,  71.,  72.,  73.,  74.,  75.,  76.,
#         77.,  78.,  79.,  80.,  81.,  82.,  83.,  84.,  85.,  86.,  87.,
#         88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,  96.,  97.,  98.,
#         99., 100.])
# >>>
# >>> linspace(0, 100, 1001)
# array([  0. ,   0.1,   0.2, ...,  99.8,  99.9, 100. ])
# >>>
# >>> linspace(0, 100, 1001).shape
# (1001,)

